<div id="gift-cards-step" class="gift-cards-step">
    <h2>Step 3: Add a Gift Card</h2>
    <div class="container">
        <div class="gift-card-options">
            {% for product in collections['gift-cards'].products %}
                <div class="gift-card-option" data-product-id="{{ product.id }}">
                    <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
                    <div class="product-info">
                        <span class="product-name">{{ product.title }}</span>
                        <span class="product-price">${{ product.price | divided_by: 100 }}</span>
                    </div>
                    <button class="select-design" data-product-id="{{ product.id }}" data-variants="{{ product.variants | json }}">Select Design</button>
                </div>
            {% endfor %}
        </div>

        <div class="popup-overlay" id="popup-overlay">
            <div class="popup">
                <span class="close" id="popup-close">&times;</span>
                <h3>Customize Your Gift Card</h3>
                <textarea id="gift-message" maxlength="200" placeholder="Enter your message (max 200 characters)"></textarea>
                <input type="text" id="gift-from" placeholder="From: Your name">
                <label for="delivery-date">Select Delivery Date:</label>
                <input type="date" id="delivery-date" min="">
                <button id="save-button">Save</button>
            </div>
        </div>
        
        <!-- Sticky Cart -->
        <div class="sticky-cart">
            <h3>Your Gift</h3>
            <div id="cart-items"></div>
            <div class="cart-summary">
                <p><strong>Total:</strong> $<span id="cart-total">0.00</span></p>
                <button type="button" id="checkout-button">Checkout</button>
            </div>
        </div>
    </div>

    <script>
        const overlay = document.getElementById('popup-overlay');
        const closeBtn = document.getElementById('popup-close');
        const saveBtn = document.getElementById('save-button');
        const deliveryDateInput = document.getElementById('delivery-date');
        let selectedProductId = null;
        let selectedVariants = [];

        const cart = {};

        // Set minimum delivery date (5 calendar days from today)
        const today = new Date();
        const minDeliveryDate = new Date(today);
        minDeliveryDate.setDate(today.getDate() + 5);
        deliveryDateInput.min = minDeliveryDate.toISOString().split('T')[0];

        function addToCart(productId, title, price, image, quantity) {
            if (!cart[productId]) {
                cart[productId] = { title, price, quantity, image };
            } else {
                cart[productId].quantity += quantity;
            }
            updateStickyCart();
        }

        function updateStickyCart() {
            const cartItemsContainer = document.getElementById('cart-items');
            cartItemsContainer.innerHTML = '';
            let total = 0;

            Object.entries(cart).forEach(([productId, item]) => {
                const { title, price, quantity, image } = item;
                total += price * quantity;

                const cartItem = document.createElement('div');
                cartItem.className = 'cart-item';
                cartItem.innerHTML = `
                    <img src="${image}" alt="${title}">
                    <div class="cart-item-info">
                        <div>${title}</div>
                        <div class="cart-item-controls">
                            <button onclick="decreaseQuantity('${productId}')">-</button>
                            <span>${quantity}</span>
                            <button onclick="increaseQuantity('${productId}')">+</button>
                        </div>
                        <div>$${(price * quantity).toFixed(2)}</div>
                    </div>
                `;
                cartItemsContainer.appendChild(cartItem);
            });

            document.getElementById('cart-total').textContent = total.toFixed(2);
        }

        function decreaseQuantity(productId) {
            if (cart[productId].quantity > 1) {
                cart[productId].quantity -= 1;
            } else {
                delete cart[productId];
            }
            updateStickyCart();
        }

        function increaseQuantity(productId) {
            cart[productId].quantity += 1;
            updateStickyCart();
        }

        document.querySelectorAll('.select-design').forEach(button => {
            button.addEventListener('click', function() {
                const variantsData = this.getAttribute('data-variants');
                try {
                    // Log the raw value of data-variants for debugging
                    console.log('Raw variants data:', variantsData);
                    // Parse the variants safely
                    selectedVariants = JSON.parse(variantsData);
                    selectedProductId = this.getAttribute('data-product-id');
                    overlay.style.display = 'flex';
                } catch (e) {
                    console.error('Error parsing variants data:', e);
                    alert('There was an issue selecting the design. Please try again.');
                }
            });
        });

        closeBtn.addEventListener('click', function() {
            overlay.style.display = 'none';
        });

        overlay.addEventListener('click', function(event) {
            if (event.target === overlay) {
                overlay.style.display = 'none';
            }
        });

        saveBtn.addEventListener('click', function () {
            const message = document.getElementById('gift-message').value;
            const fromName = document.getElementById('gift-from').value;
            const deliveryDate = document.getElementById('delivery-date').value;

            if (!message || !fromName || !deliveryDate) {
                alert('Please fill out all fields.');
                return;
            }

            // Ensure the selected variant ID is available
            const variantId = selectedVariants.length > 0 ? selectedVariants[0].id : null;

            if (!variantId) {
                alert('Please select a valid variant.');
                return;
            }

            const payload = {
                items: [
                    {
                        id: selectedProductId,          // The product ID
                        variant_id: variantId,          // The correct variant ID
                        quantity: 1,
                        properties: {
                            'Gift Message': message,
                            'From': fromName,
                            'Delivery Date': deliveryDate,
                        }
                    }
                ]
            };

            // Log the selected product ID and variant ID for debugging
            console.log('Selected Product ID:', selectedProductId);
            console.log('Selected Variant ID:', variantId);
            console.log('Payload being sent:', payload);

            fetch('/cart/add.js', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload),
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(data => {
                        console.error('Error details:', data);
                        throw new Error(data.message || 'Unknown error occurred.');
                    });
                }
                return response.json();
            })
            .then(data => {
                console.log('Success:', data);
                alert('Gift card customization saved!');
                overlay.style.display = 'none';
            })
            .catch(error => {
                console.error('Error occurred:', error);
                alert(`Failed to save customization: ${error.message}`);
            });
        });
    </script>
</div>
