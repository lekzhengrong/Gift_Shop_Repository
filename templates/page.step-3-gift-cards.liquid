<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Step 3: Add a Gift Card</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      min-height: 100vh;
    }
    .container {
      display: flex;
      gap: 20px;
      padding: 20px;
      max-width: 1400px;
      margin: 0 auto;
    }
    .gift-card-options {
      flex: 1;
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 12px;
      row-gap: 12px;
      height: fit-content;
    }
    .gift-card-option {
      border: 1px solid #eee;
      padding: 12px;
      border-radius: 8px;
      text-align: center;
      height: fit-content;
      background: #fff;
    }
    .gift-card-option img {
      width: 100%;
      height: 180px;
      object-fit: cover;
      border-radius: 4px;
      margin-bottom: 8px;
      display: block;
    }
    .select-design {
      width: 95%;
      padding: 10px;
      background: #000;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.2s ease;
    }
    .select-design:hover {
      background: #333;
    }
    .popup-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      display: none;
      justify-content: center;
      align-items: center;
    }
    .popup {
      background: white;
      padding: 20px;
      border-radius: 8px;
      width: 320px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      text-align: left;
      position: relative;
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    .popup .close {
      position: absolute;
      top: 10px;
      right: 10px;
      cursor: pointer;
      font-size: 18px;
      font-weight: bold;
    }
    .popup label {
      margin-bottom: 4px;
      display: block;
    }
    .popup input,
    .popup textarea {
      width: 100%;
      padding: 8px;
      margin-bottom: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 14px;
    }
    .sticky-cart {
      width: 300px;
      background: #f9f9f9;
      padding: 20px;
      border-radius: 8px;
      position: sticky;
      top: 20px;
      height: fit-content;
    }
    .cart-item {
      display: flex;
      gap: 12px;
      margin-bottom: 16px;
      align-items: center;
    }
    .cart-item img {
      width: 60px;
      height: 60px;
      object-fit: cover;
      border-radius: 4px;
    }
    .cart-item-info {
      flex: 1;
    }
    .cart-item-title {
      font-weight: 500;
      margin-bottom: 4px;
    }
    .cart-item-price {
      color: #666;
    }
    .quantity-control {
      display: flex;
      align-items: center;
      gap: 8px;
      margin-top: 8px;
    }
    .quantity-control button {
      padding: 2px 8px;
      border: 1px solid #ddd;
      background: white;
      cursor: pointer;
    }
    .quantity-control input {
      width: 40px;
      text-align: center;
      border: 1px solid #ddd;
      padding: 2px;
    }
    .cart-total {
      margin-top: 20px;
      padding-top: 16px;
      border-top: 1px solid #ddd;
      font-weight: bold;
    }
    #checkout-button {
      width: 100%;
      padding: 12px;
      background: #000;
      color: white;
      border: none;
      border-radius: 4px;
      margin-top: 16px;
      cursor: pointer;
    }
    #checkout-button:hover {
      background: #333;
    }
  </style>
</head>
<body>
  <h2>Step 3: Add a Gift Card</h2>
  <div class="container">
    <!-- Gift card options section remains the same -->
    <div class="gift-card-options">
      {% for product in collections['gift-cards'].products %}
      <div class="gift-card-option">
        <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}" />
        <div class="product-info">
          <span class="product-name">{{ product.title }}</span>
          <span class="product-price">${{ product.price | divided_by: 100 }}</span>
        </div>
        <button
          class="select-design"
          data-product-id="{{ product.id }}"
          data-product-title="{{ product.title }}"
          data-product-price="{{ product.price | divided_by: 100 }}"
          data-product-image="{{ product.featured_image | img_url: 'medium' }}"
        >
          Select Design
        </button>
      </div>
      {% endfor %}
    </div>

    <!-- Popup remains the same -->
    <div class="popup-overlay" id="popup-overlay">
      <div class="popup">
        <span class="close" id="popup-close">&times;</span>
        <h3>Customize Your Gift Card</h3>
        <textarea id="gift-message" maxlength="200" placeholder="Enter your message (max 200 characters)"></textarea>
        <input type="text" id="gift-from" placeholder="From: Your name" />
        <label for="delivery-date">Select Delivery Date:</label>
        <input type="date" id="delivery-date" />
        <button id="save-button">Save</button>
      </div>
    </div>

    <!-- Updated sticky cart -->
    <div class="sticky-cart">
      <h3>Your Box</h3>
      <div id="cart-items"></div>
      <div class="cart-total">
        Total: $<span id="cart-total">0.00</span>
      </div>
      <button id="checkout-button">Customise your card!</button>
    </div>
  </div>

  <script>
    const overlay = document.getElementById('popup-overlay');
    const closeBtn = document.getElementById('popup-close');
    const saveBtn = document.getElementById('save-button');
    let selectedProduct = null;
    const cart = {};

    function updateQuantity(id, delta) {
      if (cart[id]) {
        cart[id].quantity = Math.max(1, (cart[id].quantity || 1) + delta);
        updateStickyCart();
      }
    }

    function updateStickyCart() {
      const cartItemsContainer = document.getElementById('cart-items');
      cartItemsContainer.innerHTML = '';
      let total = 0;

      Object.entries(cart).forEach(([id, item]) => {
        const quantity = item.quantity || 1;
        const itemTotal = item.price * quantity;
        total += itemTotal;

        cartItemsContainer.innerHTML += `
          <div class="cart-item">
            <img src="${item.image}" alt="${item.title}">
            <div class="cart-item-info">
              <div class="cart-item-title">${item.title}</div>
              <div class="cart-item-price">$${item.price.toFixed(2)}</div>
              <div class="quantity-control">
                <button onclick="updateQuantity('${id}', -1)">-</button>
                <input type="text" value="${quantity}" readonly>
                <button onclick="updateQuantity('${id}', 1)">+</button>
              </div>
            </div>
          </div>
        `;
      });

      document.getElementById('cart-total').textContent = total.toFixed(2);
    }

    function addToCart(id, title, price, image, message = '', fromName = '', deliveryDate = '') {
      cart[id] = {
        title,
        price: parseFloat(price),
        image,
        message,
        fromName,
        deliveryDate,
        quantity: 1
      };
      updateStickyCart();
    }

    // Rest of the JavaScript remains the same...
    document.querySelectorAll('.select-design').forEach(button => {
      button.addEventListener('click', function() {
        selectedProduct = {
          id: this.getAttribute('data-product-id'),
          title: this.getAttribute('data-product-title'),
          price: parseFloat(this.getAttribute('data-product-price')),
          image: this.getAttribute('data-product-image')
        };
        overlay.style.display = 'flex';
      });
    });

    closeBtn.addEventListener('click', () => overlay.style.display = 'none');

    saveBtn.addEventListener('click', function() {
      const message = document.getElementById('gift-message').value;
      const fromName = document.getElementById('gift-from').value;
      const deliveryDate = document.getElementById('delivery-date').value;

      if (!message || !fromName || !deliveryDate) {
        alert('Please fill out all fields.');
        return;
      }

      addToCart(
        selectedProduct.id,
        selectedProduct.title,
        selectedProduct.price,
        selectedProduct.image,
        message,
        fromName,
        deliveryDate
      );
      overlay.style.display = 'none';
    });

    // Initialize cart from URL parameters
    function populateCartFromURL() {
      const params = new URLSearchParams(window.location.search);
      
      const boxId = params.get('box_id');
      const boxTitle = params.get('box_title');
      const boxPrice = params.get('box_price');
      const boxImage = params.get('box_image');
      
      if (boxId && boxTitle && boxPrice && boxImage) {
        addToCart(boxId, boxTitle, boxPrice, boxImage);
      }

      const productIds = params.getAll('product_id[]');
      const productTitles = params.getAll('product_title[]');
      const productPrices = params.getAll('product_price[]');
      const productImages = params.getAll('product_image[]');
      const quantities = params.getAll('quantity[]');

      for (let i = 0; i < productIds.length; i++) {
        if (productIds[i] && productTitles[i] && productPrices[i] && productImages[i]) {
          addToCart(
            productIds[i],
            productTitles[i],
            productPrices[i],
            productImages[i]
          );
          if (quantities[i]) {
            cart[productIds[i]].quantity = parseInt(quantities[i]);
          }
        }
      }
      
      updateStickyCart();
    }

    document.addEventListener('DOMContentLoaded', populateCartFromURL);

    document.getElementById('checkout-button').addEventListener('click', function() {
      window.location.href = '/checkout';
    });
  </script>
</body>
</html>