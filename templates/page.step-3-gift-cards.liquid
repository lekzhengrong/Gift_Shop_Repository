<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Step 3: Add a Gift Card</title>
    <style>
        .gift-card-option {
            text-align: center;
            border: 1px solid #ccc;
            padding: 10px;
            border-radius: 5px;
        }
        .gift-card-option img {
            width: 150px;
            height: auto;
        }
        .popup-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: none;
            justify-content: center;
            align-items: center;
        }
        .container {
            display: flex;
            gap: 20px;
            padding: 20px;
            max-width: 1400px;
            margin: 0 auto;
        }
        .popup {
            background: white;
            padding: 20px;
            border-radius: 5px;
            width: 300px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            text-align: center;
            position: relative;
        }
        .popup .close {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
            font-size: 18px;
            font-weight: bold;
        }
        .sticky-cart {
            width: 300px;
            background: #f9f9f9;
            padding: 20px;
            border-radius: 8px;
            position: sticky;
            top: 20px;
            height: calc(100vh - 40px);
            overflow-y: auto;
        }
    </style>
</head>
<body>
    <h2>Step 3: Add a Gift Card</h2>
    <div class="container">
        <div class="gift-card-options">
            {% for product in collections['gift-cards'].products %}
                <div class="gift-card-option">
                    <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
                    <div class="product-info">
                        <span class="product-name">{{ product.title }}</span>
                        <span class="product-price">${{ product.price | divided_by: 100 }}</span>
                    </div>
                    <button class="select-design" data-product-id="{{ product.id }}">Select Design</button>
                </div>
            {% endfor %}
        </div>

        <div class="popup-overlay" id="popup-overlay">
            <div class="popup">
                <span class="close" id="popup-close">&times;</span>
                <h3>Customize Your Gift Card</h3>
                <textarea id="gift-message" maxlength="200" placeholder="Enter your message (max 200 characters)"></textarea>
                <input type="text" id="gift-from" placeholder="From: Your name">
                <label for="delivery-date">Select Delivery Date:</label>
                <input type="date" id="delivery-date">
                <button id="save-button">Save</button>
            </div>
        </div>

        <div class="sticky-cart">
            <h3>Your Gift</h3>
            <div id="cart-items"></div>
            <div class="cart-summary">
                <p><strong>Total:</strong> $<span id="cart-total">0.00</span></p>
                <button type="button" id="checkout-button">Checkout</button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const overlay = document.getElementById('popup-overlay');
            const closeBtn = document.getElementById('popup-close');
            const saveBtn = document.getElementById('save-button');
            const deliveryDateInput = document.getElementById('delivery-date');
            let selectedProductId = null;
            const cart = {};

            const today = new Date();
            today.setDate(today.getDate() + 5);
            deliveryDateInput.min = today.toISOString().split('T')[0];

            function updateCart() {
                const cartContainer = document.getElementById('cart-items');
                cartContainer.innerHTML = '';
                let total = 0;
                Object.entries(cart).forEach(([id, item]) => {
                    total += item.price * item.quantity;
                    cartContainer.innerHTML += `<div>${item.title} - $${(item.price * item.quantity).toFixed(2)}</div>`;
                });
                document.getElementById('cart-total').textContent = total.toFixed(2);
            }

            document.querySelectorAll('.select-design').forEach(button => {
                button.addEventListener('click', function () {
                    selectedProductId = this.getAttribute('data-product-id');
                    overlay.style.display = 'flex';
                });
            });

            closeBtn.addEventListener('click', () => overlay.style.display = 'none');
            overlay.addEventListener('click', event => {
                if (event.target === overlay) overlay.style.display = 'none';
            });

            saveBtn.addEventListener('click', function () {
                const message = document.getElementById('gift-message').value.trim();
                const fromName = document.getElementById('gift-from').value.trim();
                const deliveryDate = document.getElementById('delivery-date').value;

                if (!message || !fromName || !deliveryDate) {
                    alert('Please fill out all fields.');
                    return;
                }

                const payload = {
                    items: [{
                        id: selectedProductId,
                        quantity: 1,
                        properties: {
                            'Gift Message': message,
                            'From': fromName,
                            'Delivery Date': deliveryDate
                        }
                    }]
                };

                fetch('/cart/add.js', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                })
                .then(response => response.json())
                .then(data => {
                    alert('Gift card customization saved!');
                    overlay.style.display = 'none';
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to save customization.');
                });
            });
        });
    </script>
</body>
</html>
