<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Select Gift Products</title>
    <style>
        .product-options { display: flex; gap: 20px; flex-wrap: wrap; }
        .product-option { text-align: center; width: 150px; }
        .product-option img { width: 150px; height: auto; }
    </style>
</head>
<body>
    <h2>Step 2: Choose Products for Your Gift Box</h2>
    <form id="gift-selection-form">
        <!-- Hidden input for the selected gift box -->
        <input type="hidden" name="box_id" id="box-id" value="">

        <div class="product-options">
            {% for product in collections['gift-products'].products %}
                {% for variant in product.variants %}
                    <div class="product-option">
                        <input type="checkbox" id="variant-{{ variant.id }}" name="items[]" value="{{ variant.id }}">
                        <label for="variant-{{ variant.id }}">
                            <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
                            <p>{{ product.title }} ({{ variant.title }})</p>
                        </label>
                    </div>
                {% endfor %}
            {% endfor %}
        </div>
        <button type="button" id="add-to-cart" class="add-to-cart-button">Add to Cart</button>
    </form>

    <script>
        /**
         * Extract query parameters from the URL
         */
        function getQueryParam(param) {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(param);
        }

        /**
         * Initialize Step 2 by setting the hidden input with the box_id
         */
        function initializeStep2() {
            // Extract the box_id from the URL
            const boxId = getQueryParam('box_id');
            if (!boxId) {
                alert("No gift box selected. Please return to the previous page.");
                window.location.href = '/pages/gift-boxes'; // Redirect to Step 1
                return;
            }

            // Set the box_id in the hidden input
            document.getElementById('box-id').value = boxId;
        }

        /**
         * Add selected products and gift box to the cart
         */
        async function addToCart() {
            const boxId = document.getElementById('box-id').value;
            if (!boxId) {
                alert("No gift box selected. Please return to the previous page.");
                return;
            }

            // Collect selected products
            const selectedProducts = document.querySelectorAll('input[name="items[]"]:checked');
            if (selectedProducts.length === 0) {
                alert("Please select at least one product to add to your gift box.");
                return;
            }

            // Prepare the items array for Shopify
            const items = [
                { id: parseInt(boxId), quantity: 1 }, // Add the gift box
                ...Array.from(selectedProducts).map(product => ({
                    id: parseInt(product.value),
                    quantity: 1,
                }))
            ];

            console.log("Items to be added to cart:", items); // Debugging

            try {
                const response = await fetch('/cart/add.js', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ items }), // Shopify expects this format
                });

                if (response.ok) {
                    // Redirect to the cart page on success
                    window.location.href = '/cart';
                } else {
                    const error = await response.json();
                    console.error("Error adding items to cart:", error);
                    alert("An error occurred while adding items to the cart. Please try again.");
                }
            } catch (error) {
                console.error("Network error:", error);
                alert("An error occurred. Please check your connection and try again.");
            }
        }

        // Initialize Step 2 on page load
        document.addEventListener('DOMContentLoaded', initializeStep2);

        // Attach event listener to the Add to Cart button
        document.getElementById('add-to-cart').addEventListener('click', addToCart);
    </script>
</body>
</html>
