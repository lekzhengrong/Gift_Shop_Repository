<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Select Gift Products</title>
    <style>
        .product-options { display: flex; gap: 20px; flex-wrap: wrap; }
        .product-option { text-align: center; width: 150px; }
        .product-option img { width: 150px; height: auto; }
    </style>
</head>
<body>
    <h2>Step 2: Choose Products</h2>
    <form id="gift-selection-form">
        <!-- Hidden input for the selected gift box -->
        <input type="hidden" name="id" id="box-id" value="">

        <div class="product-options">
            {% for product in collections['gift-products'].products %}
                <div class="product-option">
                    <input type="checkbox" id="product-{{ product.variants.first.id }}" name="items[]" value="{{ product.variants.first.id }}">
                    <label for="product-{{ product.variants.first.id }}">
                        <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
                        <p>{{ product.title }}</p>
                    </label>
                </div>
            {% endfor %}
        </div>
        <button type="button" id="add-to-cart" class="add-to-cart-button">Add to Cart</button>
    </form>

    <script>
       document.getElementById('add-to-cart').addEventListener('click', async function () {
    const boxId = document.getElementById('box-id').value;
    if (!boxId) {
        alert("No gift box selected. Please return to the previous page.");
        return;
    }

    const selectedProducts = document.querySelectorAll('input[name="items[]"]:checked');
    if (selectedProducts.length === 0) {
        alert("Please select at least one product to add to the box.");
        return;
    }

    // Include the gift box as the first item to add
    const itemsToAdd = [{ id: boxId, quantity: 1 }];

    // Add selected products to the list
    selectedProducts.forEach(product => {
        itemsToAdd.push({ id: product.value, quantity: 1 });
    });

    try {
        for (const item of itemsToAdd) {
            const response = await fetch('/cart/add.js', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(item), // Send each item individually
            });

            if (!response.ok) {
                const error = await response.json();
                console.error("Error adding item:", item, error);
                throw new Error("Failed to add an item to the cart.");
            }
        }

        // Redirect to the cart page after all items are added
        window.location.href = '/cart';
    } catch (error) {
        console.error("Error during add-to-cart process:", error);
        alert("An error occurred while adding items to the cart. Please try again.");
    }
});

    </script>
</body>
</html>
