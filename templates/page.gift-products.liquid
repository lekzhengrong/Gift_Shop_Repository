<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Select Gift Products</title>
    <style>
        .product-options { display: flex; gap: 20px; flex-wrap: wrap; }
        .product-option { text-align: center; width: 150px; }
        .product-option img { width: 150px; height: auto; }
    </style>
</head>
<body>
    <h2>Step 2: Choose Products for Your Gift Box</h2>
    <form id="gift-selection-form">
        <!-- Hidden input for the selected gift box -->
        <input type="hidden" name="box_id" id="box-id" value="">

        <div class="product-options">
            {% for product in collections['gift-products'].products %}
                <div class="product-option">
                    <input 
                        type="checkbox" 
                        id="product-{{ product.id }}" 
                        name="items[]" 
                        value="{{ product.variants.first.id }}"> <!-- Correct Shopify variant ID -->
                    <label for="product-{{ product.id }}">
                        <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
                        <p>{{ product.title }}</p>
                    </label>
                </div>
            {% endfor %}
        </div>
        
        <button type="button" id="add-to-cart" class="add-to-cart-button">Add to Cart</button>
    </form>

    <script>
        async function addToCart() {
    const boxId = document.getElementById("box-id").value;

    if (!boxId) {
        alert("No gift box selected. Please return to the previous page.");
        return;
    }

    // Collect selected products
    const selectedProducts = document.querySelectorAll('input[name="items[]"]:checked');

    if (!validateSelectedProducts(selectedProducts)) return;

    // Prepare the items array for Shopify
    const items = [
        { id: parseInt(boxId, 10), quantity: 1 }, // Add the gift box
        ...Array.from(selectedProducts).map((product) => ({
            id: parseInt(product.value, 10), // Use correct variant ID
            quantity: 1,
        })),
    ];

    console.log("Box ID:", boxId); // Debugging
    console.log("Selected Products:", Array.from(selectedProducts).map((product) => product.value)); // Debugging

    try {
        const response = await fetch("/cart/add.js", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ items }),
        });

        if (response.ok) {
            window.location.href = "/cart"; // Redirect on success
        } else {
            const error = await response.json();
            console.error("Error adding items to cart:", error);
            alert(`An error occurred while adding items to the cart: ${error.description || "Unknown error"}`);
        }
    } catch (error) {
        console.error("Network error:", error);
        alert("An error occurred. Please check your connection and try again.");
    }
}

</script>
</body>
</html>

