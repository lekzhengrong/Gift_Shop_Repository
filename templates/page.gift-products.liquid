<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Select Gift Products</title>
    <style>
        .product-options { display: flex; gap: 20px; flex-wrap: wrap; }
        .product-option { text-align: center; width: 150px; }
        .product-option img { width: 150px; height: auto; }
    </style>
</head>
<body>
    <h2>Step 2: Choose Products</h2>
    <form action="/cart/add" method="POST">
        <!-- Hidden input for the selected gift box -->
        <input type="hidden" name="id" id="box-id" value="">

        <div class="product-options">
            {% for product in collections['gift-products'].products %}
                <div class="product-option">
                    <input type="checkbox" id="product-{{ product.variants.first.id }}" name="items[]" value="{{ product.variants.first.id }}">
                    <label for="product-{{ product.variants.first.id }}">
                        <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
                        <p>{{ product.title }}</p>
                    </label>
                </div>
            {% endfor %}
        </div>
        <button type="submit" id="add-to-cart" class="add-to-cart-button">Add to Cart</button>
    </form>

    <script>
        // Function to extract query parameters
        function getQueryParam(param) {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(param);
        }

        // Get the box_id from the URL
        const boxId = getQueryParam('box_id');
        if (boxId) {
            // Set the hidden input value
            document.getElementById('box-id').value = boxId;
        } else {
            // If box_id is missing, alert the user and redirect to Step 1
            alert("No gift box selected. Please return to the previous page.");
            window.location.href = '/pages/gift-boxes'; // Replace with the actual URL for Step 1
        }

        // Add-to-cart functionality
        document.getElementById('add-to-cart').addEventListener('click', async function (event) {
            event.preventDefault();  // Prevent default form submission

            // Validate the box ID from the hidden input
            const boxId = document.getElementById('box-id').value;
            if (!boxId) {
                alert("No gift box selected. Please return to the previous page.");
                return;
            }

            // Collect selected products
            const selectedProducts = document.querySelectorAll('input[name="items[]"]:checked');
            if (selectedProducts.length === 0) {
                alert("Please select at least one product to add to the box.");
                return;
            }

            // Prepare the items array for the cart API
            const items = [
                { id: boxId, quantity: 1 }, // Add the selected gift box
            ];

            // Add selected products to the items array
            selectedProducts.forEach(product => {
                items.push({ id: product.value, quantity: 1 });
            });

            // Debugging: Log the items array to ensure it has correct data
            console.log("Items to be added to cart:", items);

            // Make a POST request to Shopify's cart API
            try {
                const response = await fetch('/cart/add.js', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ items }), // Correct payload structure
                });

                if (response.ok) {
                    // Redirect to the cart page on success
                    window.location.href = '/cart';
                } else {
                    // Debugging: Log the response for errors
                    const error = await response.json();
                    console.error("Error response from Shopify:", error);
                    alert("Something went wrong while adding items to the cart.");
                }
            } catch (error) {
                // Debugging: Log the error for network issues
                console.error("Network error:", error);
                alert("An error occurred. Please try again.");
            }
        });
    </script>
</body>
</html>
